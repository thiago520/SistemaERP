/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controle.ConectaBanco;
import controle.ControlePedido;
import controle.GeraLog;
import controle.ImpressaoPedido;
import controle.ModeloTabela;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.DefaultListModel;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableCellRenderer;
import modelo.ModeloPedido;

/**
 *
 * @author thiag
 */
public class FrmPedido extends javax.swing.JFrame {

    ConectaBanco connPedido = new ConectaBanco();
    ControlePedido control = new ControlePedido();    
    ModeloPedido mod = new ModeloPedido();
    ImpressaoPedido impressaoPedido = new ImpressaoPedido();
    GeraLog log = new GeraLog();
    DefaultListModel MODELO;
    int EnterC = 0;
    int EnterP = 0;
    int DigitarNumProd = 0;
    String caracteresNum = "0987654321";      
    // String caracterestxt = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz ";      
    NumberFormat formatoMoeda = NumberFormat.getCurrencyInstance();    
    String [] codigoC, codigoP;
    private int btnLista;  
    int codCliente,codProduto,codItensPedido;  
    String NomeProduto,CategoriaProduto;
    Double subTotal = 0.0;
    Double ValorItenUn = 0.0;
    Double Estoque = 0.0;
    Double Total = 0.0;
    Double desconto = 0.0;        
    Double Ptroco = 0.0;
    Double troco = 0.0;
    Double saldo = 0.0;          
    Double custo = 0.0;     
    int avisoON;
    int qtdPedidos = 0;
    String nomeCliente = "";
    
    
    /**
     * Creates new form FrmPedido
     */
    public FrmPedido() {
        initComponents();        
        connPedido.conexao();
        jDateChooserData.setDate(new Date());
        jFormattedTextFieldHora.setText(new SimpleDateFormat("HH:mm:ss").format(new Date(System.currentTimeMillis())));        
        jDateChooserData.setEnabled(false);
        jFormattedTextFieldHora.setEnabled(false);        
        jListCliente.setVisible(false);
        jListProduto.setVisible(false); 
        jRadioButtonNome.setSelected(true);        
        MODELO = new DefaultListModel();
        jListCliente.setModel(MODELO);
        jListProduto.setModel(MODELO); 
        jTextFieldNome.setEditable(false);
        jTextFieldEndereco.setEditable(false);
        jTextFieldNumero.setEditable(false);
        jTextFieldComplemento.setEditable(false);
        jTextFieldEmpresa.setEditable(false);       
        
        
        InputMap inputMap = this.getRootPane().getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0),"Salvar");        
        this.getRootPane().setInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW, inputMap);
        this.getRootPane().getActionMap().put("Salvar", new AbstractAction(){
            private static final long serialVersionUID = 1L;
            @Override
            public void actionPerformed(ActionEvent arg0) {                
                jButtonSalvar.doClick();
            }            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jTextFieldPCliente = new javax.swing.JTextField();
        jListCliente = new javax.swing.JList<>();
        jListProduto = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldEndereco = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldNumero = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldComplemento = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldEmpresa = new javax.swing.JTextField();
        jTextFieldPProduto = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabelD1 = new javax.swing.JLabel();
        jLabelD2 = new javax.swing.JLabel();
        jLabelD3 = new javax.swing.JLabel();
        jLabelP1 = new javax.swing.JLabel();
        jLabelP2 = new javax.swing.JLabel();
        jLabelP3 = new javax.swing.JLabel();
        jLabelV1 = new javax.swing.JLabel();
        jLabelV2 = new javax.swing.JLabel();
        jLabelV3 = new javax.swing.JLabel();
        jLabelObsProduto = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldQuantidade = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldObservacao = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jDateChooserData = new com.toedter.calendar.JDateChooser();
        jCheckBoxAgendar = new javax.swing.JCheckBox();
        jFormattedTextFieldHora = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItens = new javax.swing.JTable();
        jButtonInserir = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaObs = new javax.swing.JTextArea();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldValorUn = new javax.swing.JTextField();
        jButtonCadCliente = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jLabelCodigo = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxStatus = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jComboBoxLocal = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBoxFPagamento = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabelSubTotal = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldDesconto = new javax.swing.JTextField();
        jLabelHaverDeve = new javax.swing.JLabel();
        jLabelSaldo = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabelTotal = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldTroco = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabelTroco = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextFieldValorPago = new javax.swing.JTextField();
        jButtonSalvar = new javax.swing.JButton();
        jButtonLimpar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jRadioButtonCodigo = new javax.swing.JRadioButton();
        jRadioButtonNome = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Casdastro de Pedido");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 102, 0)));
        jLayeredPane1.setNextFocusableComponent(jTextFieldPCliente);

        jTextFieldPCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTextFieldPCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTextFieldPCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextFieldPCliente.setNextFocusableComponent(jTextFieldPProduto);
        jTextFieldPCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPClienteActionPerformed(evt);
            }
        });
        jTextFieldPCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPClienteKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldPCliente);
        jTextFieldPCliente.setBounds(20, 40, 200, 18);

        jListCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListClienteMousePressed(evt);
            }
        });
        jLayeredPane1.add(jListCliente);
        jListCliente.setBounds(20, 60, 200, 80);

        jListProduto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jListProduto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jListProdutoMousePressed(evt);
            }
        });
        jLayeredPane1.add(jListProduto);
        jListProduto.setBounds(100, 230, 194, 90);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 10))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel1.setText("Nome:");

        jTextFieldNome.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        jLabel3.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel3.setText("End:");

        jLabel4.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel4.setText("Nº:");

        jLabel5.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel5.setText("Comp:");

        jLabel6.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel6.setText("Empresa:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(jTextFieldNome))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumero))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 29, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel1);
        jPanel1.setBounds(20, 70, 380, 130);

        jTextFieldPProduto.setNextFocusableComponent(jTextFieldQuantidade);
        jTextFieldPProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPProdutoActionPerformed(evt);
            }
        });
        jTextFieldPProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPProdutoKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldPProduto);
        jTextFieldPProduto.setBounds(100, 210, 194, 19);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Histórico", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 2, 10))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Data");

        jLabel8.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel8.setText("Pedido");

        jLabel9.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jLabel9.setText("Valor");

        jLabelD1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelD1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelD2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelD2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelD3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelD3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelP1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelP1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelP2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelP2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelP3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelP3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelV1.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelV1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelV2.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelV2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelV3.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        jLabelV3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabelObsProduto.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(jLabelObsProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelD1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelD2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelD3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelP2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelP1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelP3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelV3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelV1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelV2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelP1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelD1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelP2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelD2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelP3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelD3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelV1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabelV2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelV3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelObsProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLayeredPane1.add(jPanel2);
        jPanel2.setBounds(410, 50, 360, 150);

        jLabel10.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel10.setText("Produto:");
        jLayeredPane1.add(jLabel10);
        jLabel10.setBounds(23, 210, 70, 15);

        jLabel11.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel11.setText("Qtda:");
        jLayeredPane1.add(jLabel11);
        jLabel11.setBounds(307, 210, 40, 20);

        jTextFieldQuantidade.setNextFocusableComponent(jTextFieldObservacao);
        jTextFieldQuantidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldQuantidadeKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldQuantidade);
        jTextFieldQuantidade.setBounds(350, 210, 50, 19);

        jLabel12.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel12.setText("Observação:");
        jLayeredPane1.add(jLabel12);
        jLabel12.setBounds(10, 240, 84, 15);

        jTextFieldObservacao.setNextFocusableComponent(jTextFieldValorUn);
        jTextFieldObservacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldObservacaoKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldObservacao);
        jTextFieldObservacao.setBounds(100, 240, 194, 19);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jDateChooserData.setDateFormatString("dd/MM/y");

        jCheckBoxAgendar.setFont(new java.awt.Font("Bremen Bd BT", 2, 10)); // NOI18N
        jCheckBoxAgendar.setText("Agendar");
        jCheckBoxAgendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAgendarActionPerformed(evt);
            }
        });

        try {
            jFormattedTextFieldHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jDateChooserData, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldHora, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBoxAgendar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxAgendar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jFormattedTextFieldHora)
                    .addComponent(jDateChooserData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel3);
        jPanel3.setBounds(460, 210, 260, 62);

        jTableItens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableItens.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableItensMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableItens);

        jLayeredPane1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 310, 391, 170);

        jButtonInserir.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonInserir.setText("Inserir");
        jButtonInserir.setNextFocusableComponent(jButtonSalvar);
        jButtonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInserirActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonInserir);
        jButtonInserir.setBounds(80, 280, 90, 23);

        jButtonEditar.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonEditar);
        jButtonEditar.setBounds(170, 280, 90, 23);

        jButtonExcluir.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonExcluir);
        jButtonExcluir.setBounds(260, 280, 100, 23);

        jLabel21.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel21.setText("Observação do pedido:");
        jLayeredPane1.add(jLabel21);
        jLabel21.setBounds(20, 490, 160, 15);

        jTextAreaObs.setColumns(20);
        jTextAreaObs.setRows(5);
        jScrollPane3.setViewportView(jTextAreaObs);

        jLayeredPane1.add(jScrollPane3);
        jScrollPane3.setBounds(20, 510, 391, 80);

        jLabel22.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel22.setText("Valor:");
        jLayeredPane1.add(jLabel22);
        jLabel22.setBounds(300, 240, 44, 15);

        jTextFieldValorUn.setNextFocusableComponent(jButtonInserir);
        jTextFieldValorUn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldValorUnKeyReleased(evt);
            }
        });
        jLayeredPane1.add(jTextFieldValorUn);
        jTextFieldValorUn.setBounds(350, 240, 50, 19);

        jButtonCadCliente.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonCadCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Search_find_3519.png"))); // NOI18N
        jButtonCadCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonCadCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCadClienteActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonCadCliente);
        jButtonCadCliente.setBounds(230, 40, 30, 30);

        jLabel19.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel19.setText("Código Pedido:");
        jLayeredPane1.add(jLabel19);
        jLabel19.setBounds(550, 10, 110, 20);

        jLabelCodigo.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLayeredPane1.add(jLabelCodigo);
        jLabelCodigo.setBounds(670, 10, 60, 20);

        jLabel13.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel13.setText("Status:");

        jComboBoxStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Agendado", "Em Preparo", "Enviado", "Finalizado", "Cancelado" }));

        jLabel23.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel23.setText("Local:");

        jComboBoxLocal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Balcão", "iFood", "Telefone", "Whatsapp" }));

        jLabel14.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel14.setText("Forma de Pagamento:");

        jComboBoxFPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Dinheiro", "Cartão de Crédito", "Cartão de Débito", "Vale Refeição" }));

        jLabel15.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel15.setText("Sub-Total:");

        jLabelSubTotal.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel16.setText("Desconto:");

        jTextFieldDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDescontoKeyReleased(evt);
            }
        });

        jLabelHaverDeve.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabelHaverDeve.setText("Em haver/ Deve:");

        jLabelSaldo.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel18.setText("Total a pagar:");

        jLabelTotal.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N

        jLabel24.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel24.setText("Troco para:");

        jTextFieldTroco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTrocoKeyReleased(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel25.setText("Troco:");

        jLabel20.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jLabel20.setText("Valor Pago:");

        jButtonSalvar.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonSalvar.setText("Salvar [F7]");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonLimpar.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonLimpar.setText("Limpar");
        jButtonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimparActionPerformed(evt);
            }
        });

        jButtonSair.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jLabelHaverDeve)
                            .addComponent(jLabel18)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jTextFieldTroco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(jLabelTotal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabelTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxFPagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButtonSalvar)
                        .addGap(2, 2, 2)
                        .addComponent(jButtonLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBoxStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jComboBoxLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxFPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelSubTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabelHaverDeve, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(jLabelSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(jLabelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTroco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel25)
                    .addComponent(jLabelTroco, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextFieldValorPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSalvar)
                    .addComponent(jButtonLimpar)
                    .addComponent(jButtonSair))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane1.add(jPanel4);
        jPanel4.setBounds(430, 290, 330, 320);

        buttonGroup1.add(jRadioButtonCodigo);
        jRadioButtonCodigo.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jRadioButtonCodigo.setText("Código");
        jLayeredPane1.add(jRadioButtonCodigo);
        jRadioButtonCodigo.setBounds(20, 10, 80, 23);

        buttonGroup1.add(jRadioButtonNome);
        jRadioButtonNome.setFont(new java.awt.Font("Bremen Bd BT", 0, 12)); // NOI18N
        jRadioButtonNome.setText("Nome/Telefone");
        jLayeredPane1.add(jRadioButtonNome);
        jRadioButtonNome.setBounds(100, 10, 130, 23);

        jLabel2.setFont(new java.awt.Font("Bremen Bd BT", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("Cadastro de Pedido");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 781, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(834, 739));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        LimpaTela();
        mod.setBtnAlterarLista(1);
        mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
        if (btnLista == 1) {
            control.ExcluirItensNSalvo(mod); 
            jButtonInserir.setEnabled(true);
            jTextFieldPProduto.setEditable(true);
        }
        dispose();        
    }//GEN-LAST:event_jButtonSairActionPerformed

    public void ReceberBotao(ModeloPedido btn) throws ParseException{              
        btnLista = btn.getBtnAlterarLista();
        if (btnLista == 1) {
            jTextFieldPCliente.setText(""); 
            jTextFieldValorPago.setEnabled(false); 
            jComboBoxStatus.setEnabled(false);            
            LimpaTela();
            connPedido.executaSQL("select max(cod_pedido) from pedido");
            try {
                connPedido.rs.first();
                int id = connPedido.rs.getInt("max(cod_pedido)");                
                jLabelCodigo.setText(String.valueOf(id+1));                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro " + ex);
                log.gravaErro(ex.toString(), "ReceberBotao");
            }            
        }         
                
        if (btnLista == 2){            
            jTextFieldPCliente.setText("");              
            LimpaTela();    
            jTextFieldValorPago.setEnabled(true);            
            jComboBoxStatus.setEnabled(true);            
            jLabelCodigo.setText(String.valueOf(btn.getCod_pedido()));            
            jComboBoxStatus.setSelectedItem(btn.getStatus());
            jComboBoxFPagamento.setSelectedItem(btn.getForma_pagamento());
            jTextFieldDesconto.setText(String.valueOf(btn.getDesconto()));
            jTextFieldValorPago.setText(String.valueOf(btn.getValor_pago()));
            SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
            java.util.Date dataEntrada = formataData.parse(btn.getData_agendada());  
            jDateChooserData.setDate(dataEntrada);
            jFormattedTextFieldHora.setText(btn.getHora_agendada());
            jTextAreaObs.setText(btn.getObs_pedido());            
            jComboBoxLocal.setSelectedItem(btn.getLocal());            
            jTextFieldTroco.setText(String.valueOf(btn.getTroco()));
            connPedido.executaSQL("select * from clientes,pedido where pedido.cod_pedido = '" + btn.getCod_pedido() + "' and clientes.id_cliente = '" + btn.getCod_cliente() + "' and pedido.cod_cliente = clientes.id_cliente");
            ResultadoCliente();            
            preencherTabelaItens("select produtos.nome_produto,itens_pedido.qtda_produto,itens_pedido.valor_un,itens_pedido.obs_produto,produtos.estoque from produtos,itens_pedido where itens_pedido.cod_pedido = '" + btn.getCod_pedido() + "' and itens_pedido.cod_produto = produtos.id_produto order by itens_pedido.cod_itensPedido");
            AtualizaPrecos();            
        }        
    }           
    
    public void ListaCliente() {                
        try {            
            connPedido.executaSQL("select * from clientes where nome_cliente like '" + jTextFieldPCliente.getText() + "%' or telefone_cliente like '%" + jTextFieldPCliente.getText() + "%' or celular_cliente like '%" + jTextFieldPCliente.getText() + "%' order by nome_cliente");
            MODELO.removeAllElements();
            int v = 0; 
            codigoC = new String[4];
            while (connPedido.rs.next() & v < 4) {
                MODELO.addElement(connPedido.rs.getString("nome_cliente"));
                codigoC[v] = connPedido.rs.getString("id_cliente");
                v++;
            }
            if (v >=1) {
                jListCliente.setVisible(true);                             
            } else {
                jListCliente.setVisible(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados");
            log.gravaErro(ex.toString(), "ListaCliente");            
        }        
    }
    
    public void ListaProduto() {
        try {            
            connPedido.executaSQL("select * from produtos where nome_produto like '%"+ jTextFieldPProduto.getText() +"%' order by nome_produto");
            MODELO.removeAllElements();
            int v = 0; 
            codigoP = new String[5];
            while (connPedido.rs.next() & v < 5) {
                MODELO.addElement(connPedido.rs.getString("nome_produto"));
                codigoP[v] = connPedido.rs.getString("id_produto");
                v++;
            }
            if (v >=1) {
                jListProduto.setVisible(true);                
            } else {
                jListProduto.setVisible(false);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao listar dados");
            log.gravaErro(ex.toString(), "ListaProduto");            
        }        
    }
    
    public void MostraCliente() {
        int Linha = jListCliente.getSelectedIndex();
        if (Linha >= 0) {
            connPedido.executaSQL("select * from clientes where id_cliente = " + codigoC[Linha] + "");
            ResultadoCliente();
        }        
    }
    
    public void MostraProduto() {
        int Linha = jListProduto.getSelectedIndex();
        if (Linha >= 0) {
            connPedido.executaSQL("select * from produtos where id_produto = " + codigoP[Linha] + "");                                      
            ResultadoProduto();
        }        
    }
    
    public void ResultadoCliente() {        
        try {
            connPedido.rs.first();            
            codCliente = connPedido.rs.getInt("id_cliente");
            jTextFieldNome.setText(connPedido.rs.getString("nome_cliente"));
            jTextFieldEndereco.setText(connPedido.rs.getString("endereco_cliente"));
            jTextFieldNumero.setText(connPedido.rs.getString("numero_cliente"));
            jTextFieldEmpresa.setText(connPedido.rs.getString("empresa_cliente"));
            jTextFieldComplemento.setText(connPedido.rs.getString("complemento_cliente"));            
            
            connPedido.executaSQL("select pedido.data_agendada,produtos.nome_produto,SUM(itens_pedido.qtda_produto * itens_pedido.valor_un) AS TOTAL from pedido,produtos,itens_pedido where pedido.cod_pedido = itens_pedido.cod_pedido and itens_pedido.cod_produto = produtos.id_produto and pedido.cod_cliente = " + codCliente + " group by itens_pedido.cod_pedido order by pedido.data_agendada desc");
            
               if (connPedido.rs.first() != false) {                
                    String data = new SimpleDateFormat("dd-MM-yyyy").format(connPedido.rs.getDate("data_agendada"));                
                    jLabelD1.setText(data);
                    jLabelP1.setText(connPedido.rs.getString("nome_produto"));                
                    jLabelV1.setText(formatoMoeda.format(connPedido.rs.getDouble("TOTAL")));
               }
               if (connPedido.rs.next() != false) {               
                    String data = new SimpleDateFormat("dd-MM-yyyy").format(connPedido.rs.getDate("data_agendada"));
                    jLabelD2.setText(data);            
                    jLabelP2.setText(connPedido.rs.getString("nome_produto"));
                    jLabelV2.setText(formatoMoeda.format(connPedido.rs.getDouble("TOTAL")));
               }
                if (connPedido.rs.next() != false) {               
                    String data = new SimpleDateFormat("dd-MM-yyyy").format(connPedido.rs.getDate("data_agendada"));
                    jLabelD3.setText(data);                        
                    jLabelP3.setText(connPedido.rs.getString("nome_produto"));
                    jLabelV3.setText(formatoMoeda.format(connPedido.rs.getDouble("TOTAL")));
                }
                
            connPedido.executaSQL("select itens_pedido.obs_produto from itens_pedido,pedido where itens_pedido.cod_pedido = pedido.cod_pedido and pedido.cod_cliente = " + codCliente + " and pedido.data_agendada = DATE_SUB(CURDATE(), INTERVAL 7 DAY)");
                if (connPedido.rs.first() != false && !"".equals(connPedido.rs.getString("obs_produto"))) {
                  jLabelObsProduto.setText("Semana passada foi pedido: " +connPedido.rs.getString("obs_produto"));
                }
            
        } catch (SQLException ex) {
            log.gravaErro(ex.toString(), "ResultadoCliente");            
        }        
    }
    
    public void ResultadoProduto() {                        
        try {
            String preco_venda = null;
            connPedido.rs.first();   
            codProduto = connPedido.rs.getInt("id_produto");
            if (DigitarNumProd == 1) {
                jTextFieldPProduto.setText(connPedido.rs.getString("nome_produto"));                              
            }   
            NomeProduto = connPedido.rs.getString("nome_produto");
            CategoriaProduto = connPedido.rs.getString("categoria");
            ValorItenUn = connPedido.rs.getDouble("preco_venda");
            Estoque = connPedido.rs.getDouble("estoque");
            
            if ("Porções".equals(CategoriaProduto)) {
                jTextFieldQuantidade.setText(String.valueOf("0,100"));
                preco_venda = String.valueOf(connPedido.rs.getDouble("preco_venda")/10);                 
            } else {
                jTextFieldQuantidade.setText(String.valueOf(1));                
                preco_venda = String.valueOf(connPedido.rs.getDouble("preco_venda")); 
            }            
            jTextFieldValorUn.setText(preco_venda.replace('.',',')); 
            jTextFieldQuantidade.requestFocus();
            jTextFieldQuantidade.selectAll();
            DigitarNumProd = 0;
        } catch (SQLException ex) {
            log.gravaErro(ex.toString(), "ResultadoProduto");
        }
    }
    
    public void preencherTabelaItens(String SQL){        
        ArrayList dados = new ArrayList();        
        Double precoTotal;          
        BigDecimal valorArred;
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMinimumFractionDigits(3);
        
        String [] Colunas = new String[]{"Produto","Observação","Qtda","Custo","Total",""};                                
          
        connPedido.executaSQL(SQL);
        try {
            if (!connPedido.rs.next()){                
            } else {                   
                    connPedido.rs.first();
                        do{ 
                            precoTotal = connPedido.rs.getDouble("valor_un") * connPedido.rs.getDouble("qtda_produto");                            
                            valorArred = control.ArredondaValor(precoTotal);
                           dados.add(new Object[]{connPedido.rs.getString("nome_produto"),connPedido.rs.getString("obs_produto"),nf.format(connPedido.rs.getDouble("qtda_produto")),connPedido.rs.getDouble("valor_un"),valorArred,connPedido.rs.getDouble("estoque")});                                                      
                        }while(connPedido.rs.next());         
                }   
        } catch (SQLException ex) {  
            log.gravaErro(ex.toString(), "PreencherTabelaItens");
        }
        
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTableItens.setModel(modelo);
        jTableItens.getColumnModel().getColumn(0).setPreferredWidth(150);
        jTableItens.getColumnModel().getColumn(0).setResizable(true);
        jTableItens.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTableItens.getColumnModel().getColumn(1).setResizable(true);    
        jTableItens.getColumnModel().getColumn(2).setPreferredWidth(38);
        jTableItens.getColumnModel().getColumn(2).setResizable(true);    
        jTableItens.getColumnModel().getColumn(3).setPreferredWidth(50);
        jTableItens.getColumnModel().getColumn(3).setResizable(true);    
        jTableItens.getColumnModel().getColumn(4).setPreferredWidth(50);
        jTableItens.getColumnModel().getColumn(4).setResizable(true);
        jTableItens.getColumnModel().getColumn(5).setMinWidth(0);
        jTableItens.getColumnModel().getColumn(5).setMaxWidth(0);        
        jTableItens.getTableHeader().setReorderingAllowed(false);
        jTableItens.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);        
        CorNaLinhaEstoque();
        AtualizaPrecos();        
    }  
    
    public void CorNaLinhaEstoque(){        
        
        jTableItens.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                JLabel label = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                Double status = (Double) jTableItens.getValueAt(row, 5);                 
                setBackground(new java.awt.Color(255,255,255));                                    
                
                if (status == null || status <= 0 ) {                    
                    setBackground(new java.awt.Color(255,102,102));
                }
                if (isSelected) {
                    setBackground(new java.awt.Color(176,196,222));                    
                }
             return label;
            }
        });
    }  
    
    private void LimpaTela() {                
        jTextFieldNome.setText("");
        jTextFieldEndereco.setText("");
        jTextAreaObs.setText("");
        jTextFieldComplemento.setText("");
        jTextFieldDesconto.setText("");
        jTextFieldEmpresa.setText("");
        jTextFieldNumero.setText("");
        jTextFieldObservacao.setText("");
        jTextFieldPProduto.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldValorPago.setText("");
        jTextFieldValorUn.setText("");
        jTextFieldTroco.setText("");        
        jLabelCodigo.setText("");
        jLabelD1.setText("");
        jLabelD2.setText("");
        jLabelD3.setText("");
        jLabelP1.setText("");
        jLabelP2.setText("");
        jLabelP3.setText("");
        jLabelSaldo.setText("");
        jLabelSubTotal.setText("");
        jLabelTotal.setText("");
        jLabelTroco.setText("");
        jLabelV1.setText("");
        jLabelV2.setText("");
        jLabelV3.setText("");
        jLabelObsProduto.setText("");
        jComboBoxStatus.setSelectedIndex(0);
        jComboBoxFPagamento.setSelectedIndex(0);
        jComboBoxLocal.setSelectedIndex(0);        
        jDateChooserData.setDate(new Date());
        jFormattedTextFieldHora.setText(new SimpleDateFormat("HH:mm:ss").format(new Date(System.currentTimeMillis())));        
        jDateChooserData.setEnabled(false);
        jFormattedTextFieldHora.setEnabled(false);
        jCheckBoxAgendar.setSelected(false);
        jListCliente.setVisible(false); 
        jLabelHaverDeve.setText("");                    
        
        ArrayList dados = new ArrayList();
        String [] Colunas = new String[]{};
        ModeloTabela modelo = new ModeloTabela(dados, Colunas);
        jTableItens.setModel(modelo);        
        
        connPedido.executaSQL("select max(cod_pedido) from pedido");
            try {
                connPedido.rs.first();
                int id = connPedido.rs.getInt("max(cod_pedido)");                
                jLabelCodigo.setText(String.valueOf(id+1));                
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, "Erro " + ex);
                log.gravaErro(ex.toString(), "LimpaTela");
            }                           
        
    }
    
    private void AtualizaPrecos() {
        subTotal = 0.0;        
        Total = 0.0;
        Ptroco = 0.0;
        troco = 0.0;
        saldo = 0.0; 
        desconto = 0.0;
        
        for ( int i = 0; i < jTableItens.getRowCount(); i++){
            subTotal += Double.parseDouble( jTableItens.getValueAt(i, 4).toString());
        }        
        
        if (subTotal != 0.0) {            
        
            jLabelSubTotal.setText(formatoMoeda.format(subTotal));
            if ("".equals(jTextFieldDesconto.getText())) {  
                
            } else {
                desconto = Double.parseDouble(jTextFieldDesconto.getText().replace(",", "."));     
            }       
            
            connPedido.executaSQL("select SUM(valor_pago)-(SUM(valor_total)-SUM(desconto)) as TOTAL from pedido where status = 'Finalizado' and cod_cliente = " + codCliente + "");            
            try {
                connPedido.rs.first();
                saldo = connPedido.rs.getDouble("TOTAL");                
                jLabelSaldo.setText(formatoMoeda.format(saldo));   
                if (saldo == 0.0) {
                    jLabelHaverDeve.setText("");
                    jLabelSaldo.setText("");                    
                } else {                 
                
                    if (saldo < 0.0) {
                        jLabelHaverDeve.setText("Deve: ");                    
                        jLabelHaverDeve.setForeground(Color.red);
                        jLabelSaldo.setForeground(Color.red);                    
                    } else {
                        if (saldo > 0.0) {
                            jLabelHaverDeve.setText("Em haver: ");
                            jLabelHaverDeve.setForeground(Color.blue);
                            jLabelSaldo.setForeground(Color.blue);                        
                        }                    
                    }
                }
            } catch (SQLException ex) {
                Logger.getLogger(FrmPedido.class.getName()).log(Level.SEVERE, null, ex);
                log.gravaErro(ex.toString(), "AtualizaPrecos");
            }
            
            Total = subTotal - desconto - saldo;                                    
            jLabelTotal.setText(formatoMoeda.format(Total));                    
            
            if ("".equals(jTextFieldTroco.getText()) || jTextFieldTroco.getText().equals("0.0"))            {            
                jLabelTroco.setText("");       
            } else {
                Ptroco = Double.parseDouble(jTextFieldTroco.getText().replace(",","."));
                if (Ptroco <= Total) {
                    jLabelTroco.setText("");
                } else {
                    troco = Total - Ptroco;
                    jLabelTroco.setText(formatoMoeda.format(troco));       
                }
            }
        }
    }
    
    private void jCheckBoxAgendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAgendarActionPerformed
        if (jCheckBoxAgendar.isSelected()) {
           jDateChooserData.setEnabled(true);
           jFormattedTextFieldHora.setText(new SimpleDateFormat("HH:mm:ss").format(new Date(System.currentTimeMillis())));
           jFormattedTextFieldHora.setEnabled(true);
           jFormattedTextFieldHora.requestFocus();
           jFormattedTextFieldHora.selectAll();
        }
        if (!jCheckBoxAgendar.isSelected()) {
           jDateChooserData.setEnabled(false);
           jFormattedTextFieldHora.setText(null);           
           jFormattedTextFieldHora.setEnabled(false); 
        }
    }//GEN-LAST:event_jCheckBoxAgendarActionPerformed

    private void jButtonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimparActionPerformed
        LimpaTela();  
        jButtonEditar.setEnabled(true);        
    }//GEN-LAST:event_jButtonLimparActionPerformed

    private void jListClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListClienteMousePressed
        MostraCliente();
        jListCliente.setVisible(false);
    }//GEN-LAST:event_jListClienteMousePressed

    private void jTextFieldPClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPClienteKeyReleased
        LimpaTela();        
        if (jRadioButtonCodigo.isSelected()) {
            if (caracteresNum.contains(evt.getKeyChar()+"")) {            
                connPedido.executaSQL("select * from clientes where id_cliente = " + jTextFieldPCliente.getText() + "");
                DigitarNumProd = 1;
                ResultadoCliente();
                jListCliente.setVisible(false);
            }
        } else {                   
          //      if (EnterC == 0) {
                    ListaCliente();
          //      } else {
          //          EnterC = 0;
          //      }
        }
    }//GEN-LAST:event_jTextFieldPClienteKeyReleased

    private void jTextFieldPClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPClienteActionPerformed
        jListCliente.setVisible(false);
     //   EnterC = 1;
    }//GEN-LAST:event_jTextFieldPClienteActionPerformed

    private void jButtonCadClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCadClienteActionPerformed
        FrmClientes frm = new FrmClientes();
        frm.setVisible(true);
    }//GEN-LAST:event_jButtonCadClienteActionPerformed

    private void jListProdutoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListProdutoMousePressed
        DigitarNumProd = 1;
        MostraProduto();
        jListProduto.setVisible(false);        
    }//GEN-LAST:event_jListProdutoMousePressed

    private void jTextFieldPProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPProdutoActionPerformed
        jListProduto.setVisible(false);
     //   EnterP = 1;
    }//GEN-LAST:event_jTextFieldPProdutoActionPerformed

   public static boolean validaProduto(String txtProduto){
      boolean valido = true;            
      if(!txtProduto.substring(0, 1).matches("[0-9]*")){
        valido = false;
      }      
        return valido;
    }
    
    private void jButtonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInserirActionPerformed
        mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
        mod.setCod_produto(codProduto);
        mod.setQtda_produto(Double.parseDouble(jTextFieldQuantidade.getText().replace(',','.')));
        mod.setValor_un(ValorItenUn);
        mod.setObs_produto(jTextFieldObservacao.getText());
        mod.setCtrlEstoque(Estoque);              
        mod.setEntregador("");        
        control.InserirItensPedido(mod); 
        preencherTabelaItens("select produtos.nome_produto,itens_pedido.qtda_produto,itens_pedido.valor_un,itens_pedido.obs_produto,produtos.estoque from produtos,itens_pedido where itens_pedido.cod_pedido = '" + mod.getCod_pedido() + "' and itens_pedido.cod_produto = produtos.id_produto order by itens_pedido.cod_itensPedido");
        jTextFieldPProduto.setText("");
        jTextFieldObservacao.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldValorUn.setText("");
        AtualizaPrecos();
        jTextFieldPProduto.requestFocus();
    }//GEN-LAST:event_jButtonInserirActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        String nome_produto = jTextFieldPProduto.getText();                
        connPedido.executaSQL("select id_produto from produtos where nome_produto = '" + nome_produto + "'");
        
        try {
            connPedido.rs.first(); 
            mod.setCod_produto(connPedido.rs.getInt("id_produto"));
            mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
            mod.setQtda_produto(Double.parseDouble(jTextFieldQuantidade.getText().replace(',','.')));            
            mod.setValor_un(Double.parseDouble(jTextFieldValorUn.getText().replace(',','.')));            
            mod.setObs_produto(jTextFieldObservacao.getText());
            control.AlterarItensPedido(mod);
            
        } catch (SQLException ex) {
            Logger.getLogger(FrmPedido.class.getName()).log(Level.SEVERE, null, ex);
            log.gravaErro(ex.toString(), "ButtonEditarActionPerformed");
        }  
        preencherTabelaItens("select produtos.nome_produto,itens_pedido.qtda_produto,itens_pedido.valor_un,itens_pedido.obs_produto,produtos.estoque from produtos,itens_pedido where itens_pedido.cod_pedido = '" + mod.getCod_pedido() + "' and itens_pedido.cod_produto = produtos.id_produto order by itens_pedido.cod_itensPedido");        
        jTextFieldPProduto.setText("");
        jTextFieldObservacao.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldValorUn.setText("");
        jButtonInserir.setEnabled(true);  
        jTextFieldPProduto.setEditable(true);
        AtualizaPrecos();
        jTextFieldPProduto.requestFocus();        
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jTableItensMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableItensMouseClicked
        String nome_produto;
        jTextFieldPProduto.setText((String) jTableItens.getValueAt(jTableItens.getSelectedRow(),0));
        nome_produto = jTextFieldPProduto.getText();
        jTextFieldObservacao.setText((String) jTableItens.getValueAt(jTableItens.getSelectedRow(),1));                
        custo = (Double) jTableItens.getValueAt(jTableItens.getSelectedRow(),3); 
        jTextFieldQuantidade.setText(""+jTableItens.getValueAt(jTableItens.getSelectedRow(),2));                
        
        jTextFieldValorUn.setText(""+jTableItens.getValueAt(jTableItens.getSelectedRow(),3));  
        mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
        mod.setQtda_produto(Double.parseDouble(jTextFieldQuantidade.getText().replace(',','.')));
        mod.setValor_un(custo);
        jButtonInserir.setEnabled(false);
        jTextFieldPProduto.setEditable(false);        
        
        connPedido.executaSQL("select itens_pedido.cod_itensPedido,produtos.estoque,itens_pedido.cod_produto from itens_pedido,produtos where itens_pedido.cod_pedido = '"+ mod.getCod_pedido() +"' and produtos.nome_produto = '"+ nome_produto +"' and itens_pedido.qtda_produto = '"+ mod.getQtda_produto() +"' and itens_pedido.valor_un = '"+ mod.getValor_un() +"'");
        try {
            connPedido.rs.first();            
            mod.setCod_itensPedido(connPedido.rs.getInt("cod_itensPedido"));
            mod.setCtrlEstoque(connPedido.rs.getDouble("estoque"));
            mod.setCod_produto(connPedido.rs.getInt("cod_produto"));            
            
        } catch (SQLException ex) {
            Logger.getLogger(FrmPedido.class.getName()).log(Level.SEVERE, null, ex);
            log.gravaErro(ex.toString(), "TableItensMouseClicked");
        }        
    }//GEN-LAST:event_jTableItensMouseClicked

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        control.ExcluirItensPedido(mod); 
        preencherTabelaItens("select produtos.nome_produto,itens_pedido.qtda_produto,itens_pedido.valor_un,itens_pedido.obs_produto,produtos.estoque from produtos,itens_pedido where itens_pedido.cod_pedido = '" + mod.getCod_pedido() + "' and itens_pedido.cod_produto = produtos.id_produto order by itens_pedido.cod_itensPedido");
        jTextFieldPProduto.setText("");
        jTextFieldObservacao.setText("");
        jTextFieldQuantidade.setText("");
        jTextFieldValorUn.setText("");          
        jButtonInserir.setEnabled(true); 
        jTextFieldPProduto.setEditable(true);
        AtualizaPrecos();
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jTextFieldDescontoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDescontoKeyReleased
        AtualizaPrecos();
    }//GEN-LAST:event_jTextFieldDescontoKeyReleased

    private void jTextFieldTrocoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTrocoKeyReleased
        AtualizaPrecos();
    }//GEN-LAST:event_jTextFieldTrocoKeyReleased

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        String data = new SimpleDateFormat("yyyy-MM-dd").format(jDateChooserData.getDate());
        mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
        mod.setCod_cliente(codCliente);
        mod.setStatus((String) jComboBoxStatus.getSelectedItem());
        mod.setForma_pagamento((String) jComboBoxFPagamento.getSelectedItem());                 
        
        mod.setValor_total(subTotal);
        
        if (!"".equals(jTextFieldDesconto.getText())) {  
            mod.setDesconto(Double.parseDouble(jTextFieldDesconto.getText().replace(",",".")));    
        } else {
            mod.setDesconto(desconto);            
        }
        
        if (!"".equals(jTextFieldValorPago.getText())) {  
            mod.setValor_pago(Double.parseDouble(jTextFieldValorPago.getText().replace(",",".")));
        }
        mod.setObs_pedido(jTextAreaObs.getText());
        mod.setLocal((String) jComboBoxLocal.getSelectedItem());
        
        if (!"".equals(jTextFieldTroco.getText())) {  
            mod.setTroco(Double.parseDouble(jTextFieldTroco.getText().replace(",",".")));
        } else {
            mod.setTroco(troco);            
        }               
        
        if (!"".equals(jTextFieldValorPago.getText())) {  
            mod.setValor_pago(Double.parseDouble(jTextFieldValorPago.getText().replace(",",".")));           
        }  
        
        if (jTableItens.getRowCount() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Não inserido itens no pedido!");
        } else {        
            if(btnLista == 1){ 
                if (jCheckBoxAgendar.isSelected()) {                          
                    mod.setData_agendada(data);
                    mod.setHora_agendada(jFormattedTextFieldHora.getText());    
                } else {
                    mod.setData_agendada(data);
                    mod.setHora_agendada(null);
                }                        
                control.InserirPedido(mod); 
                if ( ! jCheckBoxAgendar.isSelected()) {
                    try{
                        if ("SABORTRIVIAL".equals(InetAddress.getLocalHost().getHostName())) {
                            mod.setCod_pedido(Integer.parseInt(jLabelCodigo.getText()));
                            mod.setStatus("Em Preparo");
                            control.AlterarStatus(mod);
                            if ( ! "iFood".equals((String) jComboBoxLocal.getSelectedItem()) ) {
                                impressaoPedido.gerarImpressao(mod.getCod_pedido());
                            }            
                      }
                    } catch (UnknownHostException ex) {
                        Logger.getLogger(FrmPedido.class.getName()).log(Level.SEVERE, null, ex);
                        log.gravaErro(ex.toString(), "SalvarPedido");    
                   }
                }
                dispose();
            }
            if(btnLista == 2){
                mod.setData_agendada(data);                                
                if (jFormattedTextFieldHora.getText().equals("  :  :  ")) {
                    mod.setHora_agendada(null);
                } else {
                    mod.setHora_agendada(jFormattedTextFieldHora.getText());    
                }                
                control.AlterarPedido(mod);            
                dispose();
            }         
            LimpaTela(); 
        }
        verificaiFood(codCliente);        
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jTextFieldValorUnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldValorUnKeyReleased
        
        if ("Porções".equals(CategoriaProduto)) {                    
            Double valorUn,QtdaUn;    
            valorUn = Double.parseDouble(jTextFieldValorUn.getText().replace(",","."));            
            QtdaUn = valorUn / ValorItenUn;
            jTextFieldQuantidade.setText(String.valueOf(control.ArredondaCusto(QtdaUn)));            
        }
    }//GEN-LAST:event_jTextFieldValorUnKeyReleased

    private void jTextFieldPProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPProdutoKeyReleased
       String caracter = jTextFieldPProduto.getText();       
       boolean caracterValido = validaProduto(caracter);       
       if (caracterValido != false) {           
           connPedido.executaSQL("select * from produtos where id_produto = " + jTextFieldPProduto.getText() + "");
           ResultadoProduto();
           jListProduto.setVisible(false);  
       } else {
        //    if (EnterP == 0) {
                ListaProduto();
         //   } else {
         //       EnterP = 0;
         //   }          
       }       
       if(evt.getKeyCode() == evt.VK_ENTER){
            if (jButtonInserir.isEnabled() == true ) {                
                jButtonInserir.doClick();
                jListProduto.setVisible(false);
            } else {
                jButtonEditar.doClick();
                jListProduto.setVisible(false);
            }
       }
    }//GEN-LAST:event_jTextFieldPProdutoKeyReleased

    private void jTextFieldQuantidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldQuantidadeKeyReleased
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (jButtonInserir.isEnabled() == true ) {                
                jButtonInserir.doClick();
                jListProduto.setVisible(false);
            } else {
                jButtonEditar.doClick();
                jListProduto.setVisible(false);    
            }
       }
    }//GEN-LAST:event_jTextFieldQuantidadeKeyReleased

    private void jTextFieldObservacaoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldObservacaoKeyReleased
        if(evt.getKeyCode() == evt.VK_ENTER){
            if (jButtonInserir.isEnabled() == true ) {                
                jButtonInserir.doClick();
                jListProduto.setVisible(false);
            } else {
                jButtonEditar.doClick();
                jListProduto.setVisible(false);
            }
       }
    }//GEN-LAST:event_jTextFieldObservacaoKeyReleased

    public void verificaiFood(int codCliente) {        
       String SQL = "select pedido.cod_pedido, clientes.nome_cliente, Count(*) as pedidos from pedido,clientes where pedido.cod_cliente = " + codCliente + " and pedido.local = 'ifood' and pedido.cod_cliente = clientes.id_cliente and pedido.status = 'Finalizado' group by pedido.cod_cliente";
       connPedido.executaSQL(SQL);       
       
        try {
            if(!connPedido.rs.next()) {
                
            } else {
                connPedido.rs.first();
                if ((connPedido.rs.getInt("pedidos") % 10)+1 == 1) {                    
                    nomeCliente = connPedido.rs.getString("nome_cliente");
                    qtdPedidos = connPedido.rs.getInt("pedidos");  
                    avisoON = connPedido.rs.getInt("cod_pedido");                            
                }
            }  } catch (SQLException ex) {
            Logger.getLogger(FrmPedido.class.getName()).log(Level.SEVERE, null, ex);
            log.gravaErro(ex.toString(), "verificaiFood");
        }    
    }  
        
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPedido().setVisible(true);                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCadCliente;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonInserir;
    private javax.swing.JButton jButtonLimpar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JCheckBox jCheckBoxAgendar;
    private javax.swing.JComboBox<String> jComboBoxFPagamento;
    private javax.swing.JComboBox<String> jComboBoxLocal;
    private javax.swing.JComboBox<String> jComboBoxStatus;
    private com.toedter.calendar.JDateChooser jDateChooserData;
    private javax.swing.JFormattedTextField jFormattedTextFieldHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelD1;
    private javax.swing.JLabel jLabelD2;
    private javax.swing.JLabel jLabelD3;
    private javax.swing.JLabel jLabelHaverDeve;
    private javax.swing.JLabel jLabelObsProduto;
    private javax.swing.JLabel jLabelP1;
    private javax.swing.JLabel jLabelP2;
    private javax.swing.JLabel jLabelP3;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelSubTotal;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTroco;
    private javax.swing.JLabel jLabelV1;
    private javax.swing.JLabel jLabelV2;
    private javax.swing.JLabel jLabelV3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JList<String> jListCliente;
    private javax.swing.JList<String> jListProduto;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButtonCodigo;
    private javax.swing.JRadioButton jRadioButtonNome;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableItens;
    private javax.swing.JTextArea jTextAreaObs;
    private javax.swing.JTextField jTextFieldComplemento;
    private javax.swing.JTextField jTextFieldDesconto;
    private javax.swing.JTextField jTextFieldEmpresa;
    private javax.swing.JTextField jTextFieldEndereco;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldNumero;
    private javax.swing.JTextField jTextFieldObservacao;
    private javax.swing.JTextField jTextFieldPCliente;
    private javax.swing.JTextField jTextFieldPProduto;
    private javax.swing.JTextField jTextFieldQuantidade;
    private javax.swing.JTextField jTextFieldTroco;
    private javax.swing.JTextField jTextFieldValorPago;
    private javax.swing.JTextField jTextFieldValorUn;
    // End of variables declaration//GEN-END:variables
}
